// Klib ABI Dump
// Targets: [js]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.huanshankeji:compose-html-common>
open annotation class com.huanshankeji.compose.web/PreferringKobwebComposeLayoutApi : kotlin/Annotation { // com.huanshankeji.compose.web/PreferringKobwebComposeLayoutApi|null[0]
    constructor <init>() // com.huanshankeji.compose.web/PreferringKobwebComposeLayoutApi.<init>|<init>(){}[0]
}

final enum class com.huanshankeji.compose.web.attributes/AutoCapitalize : kotlin/Enum<com.huanshankeji.compose.web.attributes/AutoCapitalize> { // com.huanshankeji.compose.web.attributes/AutoCapitalize|null[0]
    enum entry Characters // com.huanshankeji.compose.web.attributes/AutoCapitalize.Characters|null[0]
    enum entry None // com.huanshankeji.compose.web.attributes/AutoCapitalize.None|null[0]
    enum entry Sentences // com.huanshankeji.compose.web.attributes/AutoCapitalize.Sentences|null[0]
    enum entry Words // com.huanshankeji.compose.web.attributes/AutoCapitalize.Words|null[0]

    final val alternativeStrValue // com.huanshankeji.compose.web.attributes/AutoCapitalize.alternativeStrValue|{}alternativeStrValue[0]
        final fun <get-alternativeStrValue>(): kotlin/String? // com.huanshankeji.compose.web.attributes/AutoCapitalize.alternativeStrValue.<get-alternativeStrValue>|<get-alternativeStrValue>(){}[0]
    final val entries // com.huanshankeji.compose.web.attributes/AutoCapitalize.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.huanshankeji.compose.web.attributes/AutoCapitalize> // com.huanshankeji.compose.web.attributes/AutoCapitalize.entries.<get-entries>|<get-entries>#static(){}[0]
    final val strValue // com.huanshankeji.compose.web.attributes/AutoCapitalize.strValue|{}strValue[0]
        final fun <get-strValue>(): kotlin/String // com.huanshankeji.compose.web.attributes/AutoCapitalize.strValue.<get-strValue>|<get-strValue>(){}[0]

    final fun valueOf(kotlin/String): com.huanshankeji.compose.web.attributes/AutoCapitalize // com.huanshankeji.compose.web.attributes/AutoCapitalize.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.huanshankeji.compose.web.attributes/AutoCapitalize> // com.huanshankeji.compose.web.attributes/AutoCapitalize.values|values#static(){}[0]

    final object Companion { // com.huanshankeji.compose.web.attributes/AutoCapitalize.Companion|null[0]
        final val valueSet // com.huanshankeji.compose.web.attributes/AutoCapitalize.Companion.valueSet|{}valueSet[0]
            final fun <get-valueSet>(): kotlin.collections/Set<kotlin/String> // com.huanshankeji.compose.web.attributes/AutoCapitalize.Companion.valueSet.<get-valueSet>|<get-valueSet>(){}[0]
    }
}

final enum class com.huanshankeji.compose.web.attributes/EnterKeyHint : kotlin/Enum<com.huanshankeji.compose.web.attributes/EnterKeyHint> { // com.huanshankeji.compose.web.attributes/EnterKeyHint|null[0]
    enum entry Done // com.huanshankeji.compose.web.attributes/EnterKeyHint.Done|null[0]
    enum entry Enter // com.huanshankeji.compose.web.attributes/EnterKeyHint.Enter|null[0]
    enum entry Go // com.huanshankeji.compose.web.attributes/EnterKeyHint.Go|null[0]
    enum entry Next // com.huanshankeji.compose.web.attributes/EnterKeyHint.Next|null[0]
    enum entry Previous // com.huanshankeji.compose.web.attributes/EnterKeyHint.Previous|null[0]
    enum entry Search // com.huanshankeji.compose.web.attributes/EnterKeyHint.Search|null[0]
    enum entry Send // com.huanshankeji.compose.web.attributes/EnterKeyHint.Send|null[0]

    final val entries // com.huanshankeji.compose.web.attributes/EnterKeyHint.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.huanshankeji.compose.web.attributes/EnterKeyHint> // com.huanshankeji.compose.web.attributes/EnterKeyHint.entries.<get-entries>|<get-entries>#static(){}[0]
    final val strValue // com.huanshankeji.compose.web.attributes/EnterKeyHint.strValue|{}strValue[0]
        final fun <get-strValue>(): kotlin/String // com.huanshankeji.compose.web.attributes/EnterKeyHint.strValue.<get-strValue>|<get-strValue>(){}[0]

    final fun valueOf(kotlin/String): com.huanshankeji.compose.web.attributes/EnterKeyHint // com.huanshankeji.compose.web.attributes/EnterKeyHint.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.huanshankeji.compose.web.attributes/EnterKeyHint> // com.huanshankeji.compose.web.attributes/EnterKeyHint.values|values#static(){}[0]

    final object Companion { // com.huanshankeji.compose.web.attributes/EnterKeyHint.Companion|null[0]
        final val valueSet // com.huanshankeji.compose.web.attributes/EnterKeyHint.Companion.valueSet|{}valueSet[0]
            final fun <get-valueSet>(): kotlin.collections/Set<kotlin/String> // com.huanshankeji.compose.web.attributes/EnterKeyHint.Companion.valueSet.<get-valueSet>|<get-valueSet>(){}[0]
    }
}

abstract interface com.huanshankeji.compose.web.css/Visibility : org.jetbrains.compose.web.css/StylePropertyEnum { // com.huanshankeji.compose.web.css/Visibility|null[0]
    final object Companion { // com.huanshankeji.compose.web.css/Visibility.Companion|null[0]
        final val Collapse // com.huanshankeji.compose.web.css/Visibility.Companion.Collapse|{}Collapse[0]
            final inline fun <get-Collapse>(): com.huanshankeji.compose.web.css/Visibility // com.huanshankeji.compose.web.css/Visibility.Companion.Collapse.<get-Collapse>|<get-Collapse>(){}[0]
        final val Hidden // com.huanshankeji.compose.web.css/Visibility.Companion.Hidden|{}Hidden[0]
            final inline fun <get-Hidden>(): com.huanshankeji.compose.web.css/Visibility // com.huanshankeji.compose.web.css/Visibility.Companion.Hidden.<get-Hidden>|<get-Hidden>(){}[0]
        final val Visible // com.huanshankeji.compose.web.css/Visibility.Companion.Visible|{}Visible[0]
            final inline fun <get-Visible>(): com.huanshankeji.compose.web.css/Visibility // com.huanshankeji.compose.web.css/Visibility.Companion.Visible.<get-Visible>|<get-Visible>(){}[0]
    }
}

final const val com.huanshankeji.compose.web.css/FIT_CONTENT // com.huanshankeji.compose.web.css/FIT_CONTENT|{}FIT_CONTENT[0]
    final fun <get-FIT_CONTENT>(): kotlin/String // com.huanshankeji.compose.web.css/FIT_CONTENT.<get-FIT_CONTENT>|<get-FIT_CONTENT>(){}[0]
final const val com.huanshankeji.compose.web/WITH_STYLES_DEPRECATED_MESSAGE // com.huanshankeji.compose.web/WITH_STYLES_DEPRECATED_MESSAGE|{}WITH_STYLES_DEPRECATED_MESSAGE[0]
    final fun <get-WITH_STYLES_DEPRECATED_MESSAGE>(): kotlin/String // com.huanshankeji.compose.web/WITH_STYLES_DEPRECATED_MESSAGE.<get-WITH_STYLES_DEPRECATED_MESSAGE>|<get-WITH_STYLES_DEPRECATED_MESSAGE>(){}[0]

final val com.huanshankeji.compose.web/DivComposable // com.huanshankeji.compose.web/DivComposable|{}DivComposable[0]
    final fun <get-DivComposable>(): kotlin/Function4<kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit> // com.huanshankeji.compose.web/DivComposable.<get-DivComposable>|<get-DivComposable>(){}[0]

final var com.huanshankeji.compose.web.dom.ext/value // com.huanshankeji.compose.web.dom.ext/value|@org.w3c.dom.HTMLElement{}value[0]
    final fun (org.w3c.dom/HTMLElement).<get-value>(): kotlin/String // com.huanshankeji.compose.web.dom.ext/value.<get-value>|<get-value>@org.w3c.dom.HTMLElement(){}[0]
    final fun (org.w3c.dom/HTMLElement).<set-value>(kotlin/String) // com.huanshankeji.compose.web.dom.ext/value.<set-value>|<set-value>@org.w3c.dom.HTMLElement(kotlin.String){}[0]

final fun (kotlin/Boolean).com.huanshankeji.compose.web.attributes/isFalseOrNull(): kotlin/Boolean? // com.huanshankeji.compose.web.attributes/isFalseOrNull|isFalseOrNull@kotlin.Boolean(){}[0]
final fun (kotlin/Boolean).com.huanshankeji.compose.web.attributes/isTrueOrNull(): kotlin/Boolean? // com.huanshankeji.compose.web.attributes/isTrueOrNull|isTrueOrNull@kotlin.Boolean(){}[0]
final fun (kotlin/Boolean).com.huanshankeji.compose.web.attributes/toOnOrOff(): kotlin/String // com.huanshankeji.compose.web.attributes/toOnOrOff|toOnOrOff@kotlin.Boolean(){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/ariaLabel(kotlin/String): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes.ext/ariaLabel|ariaLabel@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/autoCapitalize(kotlin/String?): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element>? // com.huanshankeji.compose.web.attributes.ext/autoCapitalize|autoCapitalize@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/autoCapitalizeRequiringValid(kotlin/String) // com.huanshankeji.compose.web.attributes.ext/autoCapitalizeRequiringValid|autoCapitalizeRequiringValid@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/autoComplete(org.jetbrains.compose.web.attributes/AutoComplete?) // com.huanshankeji.compose.web.attributes.ext/autoComplete|autoComplete@org.jetbrains.compose.web.attributes.AttrsScope<*>(org.jetbrains.compose.web.attributes.AutoComplete?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/disabled(kotlin/Boolean?) // com.huanshankeji.compose.web.attributes.ext/disabled|disabled@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Boolean?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/enterKeyHintIfValid(kotlin/String) // com.huanshankeji.compose.web.attributes.ext/enterKeyHintIfValid|enterKeyHintIfValid@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/form(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/form|form@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/href(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/href|href@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/label(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/label|label@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/max(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/max|max@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/maxLength(kotlin/Int?) // com.huanshankeji.compose.web.attributes.ext/maxLength|maxLength@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Int?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/min(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/min|min@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/minLength(kotlin/Int?) // com.huanshankeji.compose.web.attributes.ext/minLength|minLength@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Int?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/multiple(kotlin/Boolean?) // com.huanshankeji.compose.web.attributes.ext/multiple|multiple@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Boolean?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/name(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/name|name@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/pattern(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/pattern|pattern@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/placeholder(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/placeholder|placeholder@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/readOnly(kotlin/Boolean?) // com.huanshankeji.compose.web.attributes.ext/readOnly|readOnly@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Boolean?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/required(kotlin/Boolean?) // com.huanshankeji.compose.web.attributes.ext/required|required@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Boolean?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/selected(kotlin/Boolean?) // com.huanshankeji.compose.web.attributes.ext/selected|selected@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Boolean?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/step(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/step|step@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/target(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/target|target@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/type(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/type|type@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/type(org.jetbrains.compose.web.attributes/InputType<*>?) // com.huanshankeji.compose.web.attributes.ext/type|type@org.jetbrains.compose.web.attributes.AttrsScope<*>(org.jetbrains.compose.web.attributes.InputType<*>?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes.ext/value(kotlin/String?) // com.huanshankeji.compose.web.attributes.ext/value|value@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attr(kotlin/String, kotlin/Boolean = ...): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/attr|attr@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Boolean){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attr(kotlin/String, kotlin/Int): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/attr|attr@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Int){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attr(kotlin/String, kotlin/Number): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/attr|attr@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Number){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attrIfNotNull(kotlin/String, kotlin/Boolean?) // com.huanshankeji.compose.web.attributes/attrIfNotNull|attrIfNotNull@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Boolean?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attrIfNotNull(kotlin/String, kotlin/Int?) // com.huanshankeji.compose.web.attributes/attrIfNotNull|attrIfNotNull@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Int?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attrIfNotNull(kotlin/String, kotlin/Number?) // com.huanshankeji.compose.web.attributes/attrIfNotNull|attrIfNotNull@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Number?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/attrIfNotNull(kotlin/String, kotlin/String?) // com.huanshankeji.compose.web.attributes/attrIfNotNull|attrIfNotNull@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.String?){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/autoCapitalize(com.huanshankeji.compose.web.attributes/AutoCapitalize): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/autoCapitalize|autoCapitalize@org.jetbrains.compose.web.attributes.AttrsScope<*>(com.huanshankeji.compose.web.attributes.AutoCapitalize){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/autoCapitalize(kotlin/String): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/autoCapitalize|autoCapitalize@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/autocorrect(kotlin/Boolean): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/autocorrect|autocorrect@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.Boolean){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/autocorrect(kotlin/String): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/autocorrect|autocorrect@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/booleanAttr(kotlin/String, kotlin/Boolean): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/booleanAttr|booleanAttr@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String;kotlin.Boolean){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/enterKeyHint(com.huanshankeji.compose.web.attributes/EnterKeyHint): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/enterKeyHint|enterKeyHint@org.jetbrains.compose.web.attributes.AttrsScope<*>(com.huanshankeji.compose.web.attributes.EnterKeyHint){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/enterKeyHint(kotlin/String): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/enterKeyHint|enterKeyHint@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.attributes/AttrsScope<*>).com.huanshankeji.compose.web.attributes/slot(kotlin/String): org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/Element> // com.huanshankeji.compose.web.attributes/slot|slot@org.jetbrains.compose.web.attributes.AttrsScope<*>(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.css/StyleScope).com.huanshankeji.compose.web.css/height(kotlin/String) // com.huanshankeji.compose.web.css/height|height@org.jetbrains.compose.web.css.StyleScope(kotlin.String){}[0]
final fun (org.jetbrains.compose.web.css/StyleScope).com.huanshankeji.compose.web.css/visibility(com.huanshankeji.compose.web.css/Visibility) // com.huanshankeji.compose.web.css/visibility|visibility@org.jetbrains.compose.web.css.StyleScope(com.huanshankeji.compose.web.css.Visibility){}[0]
final fun (org.jetbrains.compose.web.css/StyleScope).com.huanshankeji.compose.web.css/width(kotlin/String) // com.huanshankeji.compose.web.css/width|width@org.jetbrains.compose.web.css.StyleScope(kotlin.String){}[0]
final fun <#A: org.w3c.dom/Element> (kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<#A>, kotlin/Unit>).com.huanshankeji.compose.web.attributes/plus(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<#A>, kotlin/Unit>?): kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<#A>, kotlin/Unit> // com.huanshankeji.compose.web.attributes/plus|plus@kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<0:0>,kotlin.Unit>(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<0:0>,kotlin.Unit>?){0§<org.w3c.dom.Element>}[0]
final fun <#A: org.w3c.dom/Element> (kotlin/Function1<org.jetbrains.compose.web.css/StyleScope, kotlin/Unit>?).com.huanshankeji.compose.web.css/wrapInAttrs(): kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<#A>, kotlin/Unit>? // com.huanshankeji.compose.web.css/wrapInAttrs|wrapInAttrs@kotlin.Function1<org.jetbrains.compose.web.css.StyleScope,kotlin.Unit>?(){0§<org.w3c.dom.Element>}[0]
final fun <#A: org.w3c.dom/HTMLElement> (org.jetbrains.compose.web.attributes/AttrsScope<#A>).com.huanshankeji.compose.web.attributes.ext/onInput(kotlin/Function1<androidx.compose.web.events/SyntheticEvent<#A>, kotlin/Unit>) // com.huanshankeji.compose.web.attributes.ext/onInput|onInput@org.jetbrains.compose.web.attributes.AttrsScope<0:0>(kotlin.Function1<androidx.compose.web.events.SyntheticEvent<0:0>,kotlin.Unit>){0§<org.w3c.dom.HTMLElement>}[0]
final fun com.huanshankeji.compose.web/Centered(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/Centered|Centered(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/CenteredInViewport(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/CenteredInViewport|CenteredInViewport(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/Column(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Boolean, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/Column|Column(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Boolean;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/ColumnS(kotlin/Function1<org.jetbrains.compose.web.css/StyleScope, kotlin/Unit>?, kotlin/Boolean, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/ColumnS|ColumnS(kotlin.Function1<org.jetbrains.compose.web.css.StyleScope,kotlin.Unit>?;kotlin.Boolean;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/ColumnWithGaps(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, org.jetbrains.compose.web.css/CSSNumericValue<out org.jetbrains.compose.web.css/CSSUnit>, kotlin/Boolean, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/ColumnWithGaps|ColumnWithGaps(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;org.jetbrains.compose.web.css.CSSNumericValue<out|org.jetbrains.compose.web.css.CSSUnit>;kotlin.Boolean;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/ColumnWithSpaceBetween(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Boolean, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/ColumnWithSpaceBetween|ColumnWithSpaceBetween(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Boolean;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/Flexbox(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/Flexbox|Flexbox(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/FlexboxS(kotlin/Function1<org.jetbrains.compose.web.css/StyleScope, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/FlexboxS|FlexboxS(kotlin.Function1<org.jetbrains.compose.web.css.StyleScope,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/FrGrid(kotlin/Int, org.jetbrains.compose.web.css/CSSNumericValue<out org.jetbrains.compose.web.css/CSSUnit>, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int) // com.huanshankeji.compose.web/FrGrid|FrGrid(kotlin.Int;org.jetbrains.compose.web.css.CSSNumericValue<out|org.jetbrains.compose.web.css.CSSUnit>;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/Row(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/Row|Row(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/RowS(kotlin/Function1<org.jetbrains.compose.web.css/StyleScope, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/RowS|RowS(kotlin.Function1<org.jetbrains.compose.web.css.StyleScope,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/RowWithGaps(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, org.jetbrains.compose.web.css/CSSNumericValue<out org.jetbrains.compose.web.css/CSSUnit>, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/RowWithGaps|RowWithGaps(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;org.jetbrains.compose.web.css.CSSNumericValue<out|org.jetbrains.compose.web.css.CSSUnit>;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/RowWithSpaceBetween(kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<org.w3c.dom/HTMLDivElement>, kotlin/Unit>?, kotlin/Function3<org.jetbrains.compose.web.dom/ElementScope<org.w3c.dom/HTMLDivElement>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.huanshankeji.compose.web/RowWithSpaceBetween|RowWithSpaceBetween(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<org.w3c.dom.HTMLDivElement>,kotlin.Unit>?;kotlin.Function3<org.jetbrains.compose.web.dom.ElementScope<org.w3c.dom.HTMLDivElement>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.huanshankeji.compose.web/Spacer(kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int) // com.huanshankeji.compose.web/Spacer|Spacer(kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final inline fun <#A: org.w3c.dom/Element> com.huanshankeji.compose.web.attributes/attrs(noinline kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<#A>, kotlin/Unit>): kotlin/Function1<org.jetbrains.compose.web.attributes/AttrsScope<#A>, kotlin/Unit> // com.huanshankeji.compose.web.attributes/attrs|attrs(kotlin.Function1<org.jetbrains.compose.web.attributes.AttrsScope<0:0>,kotlin.Unit>){0§<org.w3c.dom.Element>}[0]
final inline fun com.huanshankeji.compose.web.css/Visibility(kotlin/String): com.huanshankeji.compose.web.css/Visibility // com.huanshankeji.compose.web.css/Visibility|Visibility(kotlin.String){}[0]
